--->
docker run -d --name "nginxcontainer" -p 8080:80 nginx:latest
docker ps -a
docker rm -f nginxcontainer
docker exec -it 3dd7dd4b537f sh
docker logs containerId
docker run -d --name "nginxcontainer" -p 8081:80 -v "D:/codes Practice/learning/texts-20230226T192047Z-001/texts/index.html:/usr/share/nginx/html/index.html" nginx:latest
--> run below command where your dockerfile is present and is for creating the image
docker build -t backend-micro001 .
--> with no cache
docker build -t backend-micro001 --no-cache .
docker run --name "backend001" -d -p 8080:8080 backend-micro001:latest
docker build -t backend-micro002 --no-cache .
docker run --name "backend002" -d -p 8081:8081 backend-micro002:latest
docker ps -aq
docker rm -f containerId

---> push your local image
docker tag backend-micro001 rajji01/backend-micro001
docker push rajji01/backend-micro001
docker tag backend-micro002 rajji01/backend-micro002
docker push rajji01/backend-micro002
docker login

-->get all pods for all namespaces
kubectl get pods -A


---> port forwarding and accessing your application
kubectl run hello-world01 --image=rajji01/backend-micro001:latest --port=8080
kubectl port-forward pod/hello-world01 8080:8080
kubectl port-forward  hello-world0001 8080:8080


--->for logs and following logs
kubectl  logs hello-world
kubectl  logs hello-world -f

kubectl logs hello-world0001 -c hello-world0001

------>port-forward in deployment
kubectl port-forward deployment/hello-world 8081:8080


------>kubernetes
k get po
k exec -it nginx bash
kubectl apply -f fist-pod.yaml
k delete po podname
k delete po manifestyaml -n namespace
kubectl delete -f fist-pod.yaml -n default
kubectl describe po podname -n default

# delete all pods
k delete po --all

#for multiple container
k -n dop exec -it podname --container container-name bash

#namespaces
k get namespaces/ k get ns
k create ns testing
kubectl delete ns testing


#service
k get svc -n namespsace
kubectl describe svc -n namespace service-name
kubectl delete svc nginx-service
kubectl describe svc service-name

k logs -n podname

//for multiple pods having same selector
k logs --selector=app=nginx-testing


###for complete definition
kubectl get po -n default nginx -o yaml | less
kubectl get po -n default nginx -o json | less